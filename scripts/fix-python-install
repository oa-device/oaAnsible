#!/bin/bash

# Manual Python installation fix script for pyenv network issues
# This script provides alternative ways to install Python when pyenv fails

echo "üîß Python Installation Fix Script"
echo "================================="

# Check if we have arguments
if [ "$#" -eq 0 ]; then
    echo "Usage: $0 <hostname> [python_version]"
    echo "Example: $0 f1-ca-001 3.11.11"
    exit 1
fi

HOSTNAME="$1"
PYTHON_VERSION="${2:-3.11.11}"

echo "Target: $HOSTNAME"
echo "Python Version: $PYTHON_VERSION"
echo

# Function to run commands on remote host
run_remote() {
    local cmd="$1"
    echo "Running on $HOSTNAME: $cmd"
    ssh "admin@$HOSTNAME" "$cmd"
}

echo "üîç Checking current Python installation status..."
run_remote "~/.pyenv/bin/pyenv versions" || echo "Pyenv not found or not configured"

echo
echo "üõ†Ô∏è  Attempting fixes..."

echo "1. Installing dependencies via Homebrew..."
run_remote "brew install readline openssl@3 xz" || echo "Homebrew install failed"

echo "2. Clearing pyenv cache..."
run_remote "rm -rf ~/.pyenv/cache/*" || echo "Cache clear failed"

echo "3. Trying Python installation with system libraries..."
cat << 'EOF' | ssh "admin@$HOSTNAME" "bash -s" "$PYTHON_VERSION"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$($PYENV_ROOT/bin/pyenv init -)"

# Set up environment for compilation
export LDFLAGS="-L$(brew --prefix readline)/lib -L$(brew --prefix openssl)/lib -L$(brew --prefix xz)/lib"
export CPPFLAGS="-I$(brew --prefix readline)/include -I$(brew --prefix openssl)/include -I$(brew --prefix xz)/include"
export PYTHON_CONFIGURE_OPTS="--with-readline"

echo "Installing Python $1 with system libraries..."
$PYENV_ROOT/bin/pyenv install "$1"
EOF

if [ $? -eq 0 ]; then
    echo "‚úÖ Python installation successful!"
    echo "Setting global Python version..."
    run_remote "~/.pyenv/bin/pyenv global $PYTHON_VERSION"
    run_remote "~/.pyenv/bin/pyenv versions"
else
    echo "‚ùå Installation still failed. Trying alternative approach..."
    
    echo "4. Manual download and installation..."
    cat << 'EOF' | ssh "admin@$HOSTNAME" "bash -s" "$PYTHON_VERSION"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

# Try downloading Python manually first
echo "Downloading Python $1 source..."
mkdir -p "$PYENV_ROOT/cache"
cd "$PYENV_ROOT/cache"

# Download from python.org directly
curl -L "https://www.python.org/ftp/python/${1}/Python-${1}.tgz" -o "Python-${1}.tgz"

if [ -f "Python-${1}.tgz" ]; then
    echo "Download successful, now installing..."
    cd "$HOME"
    eval "$($PYENV_ROOT/bin/pyenv init -)"
    $PYENV_ROOT/bin/pyenv install "$1"
else
    echo "Manual download failed"
    exit 1
fi
EOF

    if [ $? -eq 0 ]; then
        echo "‚úÖ Manual installation successful!"
        run_remote "~/.pyenv/bin/pyenv global $PYTHON_VERSION"
    else
        echo "‚ùå All installation attempts failed."
        echo
        echo "üîß Manual steps to try:"
        echo "1. SSH to the machine: ssh admin@$HOSTNAME"
        echo "2. Check internet connectivity: curl -I https://www.python.org"
        echo "3. Try installing readline manually: brew install readline"
        echo "4. Clear pyenv completely: rm -rf ~/.pyenv && git clone https://github.com/pyenv/pyenv.git ~/.pyenv"
        echo "5. Or use system Python: brew install python@3.11"
        exit 1
    fi
fi

echo
echo "üéâ Python installation completed!"
echo "Verifying installation..."
run_remote "python3 --version"
run_remote "which python3"