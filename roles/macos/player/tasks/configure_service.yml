---
- name: Configure MPV player service
  block:
    - name: Collect all video files from schedules and fallback configuration
      ansible.builtin.set_fact:
        all_video_files: >-
          {%- set all_videos = [] -%}
          {%- if player.schedule_enabled | default(false) and player.schedules is defined -%}
            {%- for schedule in player.schedules -%}
              {%- for video in schedule.videos | default([]) | selectattr('enabled', 'equalto', true) -%}
                {%- if video.name not in (all_videos | map(attribute='name') | list) -%}
                  {%- set _ = all_videos.append(video) -%}
                {%- endif -%}
              {%- endfor -%}
            {%- endfor -%}
          {%- endif -%}
          {%- for video in player.videos | default([]) | selectattr('enabled', 'equalto', true) -%}
            {%- if video.name not in (all_videos | map(attribute='name') | list) -%}
              {%- set _ = all_videos.append(video) -%}
            {%- endif -%}
          {%- endfor -%}
          {{ all_videos }}

    - name: Deploy all required video files from schedules and fallback
      ansible.builtin.copy:
        src: "{{ role_path }}/files/{{ video_item.name }}"
        dest: "{{ player.video_source }}/{{ video_item.name }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0644"
      loop: "{{ all_video_files }}"
      loop_control:
        loop_var: video_item
      when:
        - all_video_files is defined and all_video_files | length > 0
        - video_item.name | regex_search('\.(webm|mp4|mov|avi|mkv)$')

    - name: Deploy OrangeAd MPV player script
      ansible.builtin.template:
        src: oemplayer.sh.j2
        dest: "{{ player.video_source }}/oemplayer.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0755"

    - name: Create player LaunchAgent plist
      ansible.builtin.template:
        src: com.orangead.player.plist.j2
        dest: "{{ ansible_user_dir }}/Library/LaunchAgents/{{ player.service_name }}.plist"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0644"

    - name: Log file deployment completion
      ansible.builtin.debug:
        msg: |
          File deployment completed successfully:
          - Video files: {{ all_video_files | length }} deployed (from {{ 'schedules and fallback' if player.schedule_enabled | default(false) else 'static configuration' }})
          - Player script: oemplayer.sh deployed with {{ 'time-based scheduling' if player.schedule_enabled | default(false) else 'static configuration' }}
          - LaunchAgent plist: {{ player.service_name }}.plist ready
          - Service transition will happen next (minimal downtime)

    - name: Verify all required files are in place
      ansible.builtin.stat:
        path: "{{ player.video_source }}/{{ video_item.name }}"
      loop: "{{ all_video_files }}"
      loop_control:
        loop_var: video_item
      register: video_files_final_check
      when: all_video_files is defined and all_video_files | length > 0

    - name: Validate file deployment readiness
      ansible.builtin.fail:
        msg: "Required video file missing: {{ video_item.video_item.name }}"
      loop: "{{ video_files_final_check.results | default([]) }}"
      loop_control:
        loop_var: video_item
      when:
        - video_files_final_check.results is defined
        - not video_item.stat.exists
