---
# Environment safety checks and validations
# Ensures operations are appropriate for the target environment

- name: Display environment information
  ansible.builtin.debug:
    msg: |
      Environment Safety Check:
      - Environment: {{ oa_environment.name | default('unknown') }}
      - Allow experimental features: {{ oa_environment.allow_experimental | default(false) }}
      - Allow server optimizations: {{ oa_environment.allow_server_optimizations | default(false) }}
      - Allow destructive operations: {{ oa_environment.allow_destructive_operations | default(false) }}
      - Allow Tailscale changes: {{ oa_environment.allow_tailscale_changes | default(true) }}
      - Target host: {{ inventory_hostname }}
      - Target user: {{ ansible_user }}

- name: Verify environment is properly configured
  ansible.builtin.fail:
    msg: |
      Environment configuration missing or invalid!
      Please ensure oa_environment.name is set in group_vars/all.yml
  when: oa_environment.name is not defined

- name: Production safety warning
  ansible.builtin.pause:
    prompt: |
      ⚠️  WARNING: You are about to run playbook on PRODUCTION environment!
      
      Environment: {{ oa_environment.name }}
      Target hosts: {{ ansible_play_hosts | join(', ') }}
      
      This will affect live devices in the field. 
      Tailscale connectivity issues could require physical access to recover.
      
      Are you absolutely sure you want to continue? (yes/no)
  register: production_confirm
  when: 
    - oa_environment.name == "production"
    - not (skip_safety_checks | default(false))

- name: Abort on production safety check
  ansible.builtin.fail:
    msg: "Production deployment aborted by user"
  when: 
    - oa_environment.name == "production" 
    - production_confirm is defined
    - production_confirm.user_input | lower != "yes"

- name: Pre-prod safety reminder
  ansible.builtin.debug:
    msg: |
      ℹ️  INFO: Running on PRE-PRODUCTION environment
      
      - This is a real Mac Mini device, not a VM
      - Changes will affect actual hardware
      - Server optimizations are enabled for testing
      - Use this to validate before production deployment
  when: oa_environment.name == "pre-prod"

- name: Staging environment notice
  ansible.builtin.debug:
    msg: |
      🧪 STAGING: Experimental environment
      
      - Full experimental features enabled
      - Safe for testing all changes
      - VM environment, easy to reset if needed
  when: oa_environment.name == "staging"

- name: Production Tailscale warning
  ansible.builtin.debug:
    msg: |
      🔒 PRODUCTION TAILSCALE BLOCKED
      
      Tailscale changes are disabled in production for safety.
      To allow Tailscale changes, run with:
      --extra-vars "oa_environment.allow_tailscale_changes=true"
      
      WARNING: Tailscale failures could cause loss of remote access!
  when: 
    - oa_environment.name == "production"
    - not (oa_environment.allow_tailscale_changes | default(false))
    - "'tailscale' in ansible_run_tags"

- name: Validate Tailscale safety for critical environments  
  block:
    - name: Check current Tailscale status
      ansible.builtin.shell: |
        tailscale status --json 2>/dev/null || echo '{"BackendState":"Unknown"}'
      register: tailscale_status_check
      changed_when: false
      failed_when: false

    - name: Parse Tailscale status
      ansible.builtin.set_fact:
        tailscale_info: "{{ tailscale_status_check.stdout | from_json }}"

    - name: Warn about Tailscale connectivity risks
      ansible.builtin.debug:
        msg: |
          🔒 TAILSCALE SAFETY CHECK:
          
          Current status: {{ tailscale_info.BackendState | default('Unknown') }}
          
          CRITICAL: If Tailscale configuration fails, you may lose remote access!
          - Ensure you have alternative access methods (local console, physical access)
          - Consider running with --check first to validate changes
          - Have a rollback plan ready
          
          Continue only if you understand these risks.

  when: 
    - oa_environment.allow_tailscale_changes | default(true)
    - oa_environment.name in ["pre-prod", "production"]
    - "'tailscale' in ansible_run_tags"