---
# Install and configure Node.js
- name: Configure Node.js
  when: macos_configure.node | bool
  # This entire block will only run if configure.node is set to true
  block:
    # Check if NVM is installed
    - name: Check if NVM is installed
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
      register: nvm_install

    # Install NVM if not already installed
    - name: Install NVM
      ansible.builtin.shell: |
        set -o pipefail
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
      when: not nvm_install.stat.exists

    # Add NVM to shell profile
    - name: Add NVM to shell profile
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.bash_profile"
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
        marker: "# {mark} ANSIBLE MANAGED BLOCK - NVM"
        create: true
        mode: "0644"

    # Install Node.js using NVM
    - name: Check if Node.js version is installed
      ansible.builtin.shell: |
        set -o pipefail
        source {{ ansible_env.HOME }}/.nvm/nvm.sh
        nvm list | grep "v{{ macos_node.version }}"
      args:
        executable: /bin/bash
      register: node_version_check
      changed_when: false
      failed_when: false

    - name: Install Node.js with NVM
      ansible.builtin.shell: |
        set -o pipefail
        source {{ ansible_env.HOME }}/.nvm/nvm.sh
        nvm install {{ macos_node.version }}
        nvm alias default {{ macos_node.version }}
      args:
        executable: /bin/bash
      register: node_install
      changed_when: false
      when: node_version_check.rc != 0 or node_version_check.stdout == ""

    # Check existing global npm packages
    - name: Check existing global npm packages
      ansible.builtin.shell: |
        set -o pipefail
        source {{ ansible_env.HOME }}/.nvm/nvm.sh
        npm list -g --depth=0 {{ item }}
      args:
        executable: /bin/bash
      register: npm_check
      changed_when: false
      failed_when: false
      loop: "{{ macos_node.packages | default([]) }}"

    # Install global npm packages
    - name: Install global npm packages
      community.general.npm:
        name: "{{ item }}"
        global: true
        state: latest
      loop: "{{ macos_node.packages | default([]) }}"
      when: "npm_check.results | selectattr('item', 'equalto', item) | map(attribute='rc') | first != 0"
      environment:
        PATH: "{{ ansible_env.HOME }}/.nvm/versions/node/v{{ macos_node.version }}/bin:{{ ansible_env.PATH }}"

    # Install bun - modern JavaScript runtime and package manager
    - name: Check if bun is installed
      ansible.builtin.command: which bun
      register: bun_check
      changed_when: false
      failed_when: false

    - name: Install bun via curl
      ansible.builtin.shell: |
        set -o pipefail
        curl -fsSL https://bun.sh/install | bash
      args:
        executable: /bin/bash
      when: bun_check.rc != 0
      changed_when: false

    - name: Add bun to PATH
      ansible.builtin.blockinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        block: |
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - BUN"
        create: true
        mode: "0644"
      when: bun_check.rc != 0
      changed_when: false
