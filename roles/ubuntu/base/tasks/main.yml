---
# Ubuntu base configuration tasks with intelligent checks

- name: Fix any broken apt repository configurations (emergency fix)
  ansible.builtin.shell: |
    # Remove all Docker repositories to fix conflicting signed-by entries
    rm -f /etc/apt/sources.list.d/*docker*.list
    rm -f /etc/apt/sources.list.d/download_docker_com*.list
    # Test if apt can now read sources
    apt-get update || true
  become: true
  failed_when: false
  changed_when: false

- name: Check current system state
  block:
    - name: Check if base packages are already installed
      ansible.builtin.package_facts:
        manager: auto

    - name: Get current timezone
      ansible.builtin.shell: |
        set -o pipefail
        readlink /etc/localtime | sed 's|.*/zoneinfo/||'
      register: current_timezone
      changed_when: false
      args:
        executable: /bin/bash

    - name: Check if ansible user exists
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        state: present
      register: user_check
      failed_when: false
      check_mode: true

    - name: Set skip flags based on current state
      ansible.builtin.set_fact:
        skip_packages: "{{ ubuntu_base_packages | difference(ansible_facts.packages.keys()) | length == 0 }}"
        skip_timezone: "{{ current_timezone.stdout == ubuntu_timezone }}"
        skip_user_setup: "{{ not user_check.changed }}"

- name: Display base configuration status
  ansible.builtin.debug:
    msg: |
      Base Configuration Status:
      - Packages: {{ 'Already installed' if skip_packages else 'Need installation' }}
      - Timezone: {{ 'Already set to ' + ubuntu_timezone if skip_timezone else 'Need to set to ' + ubuntu_timezone }}"
      - User setup: {{ 'Already configured' if skip_user_setup else 'Need configuration' }}

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  become: true
  when:
    - ubuntu_update_cache | default(true) | bool
    - not (skip_packages and skip_timezone and skip_user_setup)

- name: Upgrade system packages
  ansible.builtin.apt:
    upgrade: dist
  become: true
  when: ubuntu_upgrade_system | default(false) | bool

- name: Install base packages
  ansible.builtin.apt:
    name: "{{ ubuntu_base_packages }}"
    state: present
  become: true
  when: not skip_packages

- name: Set timezone
  community.general.timezone:
    name: "{{ ubuntu_timezone }}"
  become: true
  when: not skip_timezone

- name: Configure ansible user
  when: not skip_user_setup
  block:
    - name: Ensure ansible user exists
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        shell: /bin/bash
        create_home: true
        groups: sudo
        append: true
      become: true

    - name: Create ansible user home directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"
      become: true
      loop:
        - "/home/{{ ansible_user }}/.ssh"
        - "/home/{{ ansible_user }}/orangead"

- name: Display base configuration results
  ansible.builtin.debug:
    msg: |-
      Base Configuration Completed:
      - {{ ubuntu_base_packages | length }} essential packages {{ 'verified' if skip_packages else 'installed' }}"
      - Timezone {{ 'verified' if skip_timezone else 'set to ' + ubuntu_timezone }}"
      - User {{ ansible_user }} {{ 'verified' if skip_user_setup else 'configured with sudo access' }}
