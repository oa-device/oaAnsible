---
- name: Configure shell environment
  block:
    - name: Get default shell
      command: dscl . -read /Users/{{ ansible_user }} UserShell
      register: user_shell_info
      changed_when: false

    - name: Set shell facts
      set_fact:
        user_shell: "{{ user_shell_info.stdout.split('/')[-1] }}"
        shell_profile: "{{ ansible_env.HOME }}/.{{ user_shell_info.stdout.split('/')[-1] }}rc"

    - name: Ensure shell config directory exists
      file:
        path: "{{ ansible_env.HOME }}/.config/{{ user_shell }}"
        state: directory
        mode: '0755'

    - name: Configure shell environment
      blockinfile:
        path: "{{ shell_profile }}"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ item.name }}"
        block: "{{ item.config }}"
      with_items:
        - name: PATH_CONFIGURATION
          config: |
            # Path configuration
            export PATH="{{ homebrew_prefix }}/bin:$PATH"

        - name: HOMEBREW_CONFIGURATION
          config: |
            # Homebrew configuration
            eval "$({{ homebrew_prefix }}/bin/brew shellenv)"

        - name: PYENV_CONFIGURATION
          config: |
            # Pyenv configuration
            export PYENV_ROOT="$HOME/.pyenv"
            export PATH="$PYENV_ROOT/bin:$PATH"
            eval "$(pyenv init -)"
          when: configure_pyenv | default(false)

        - name: NODE_CONFIGURATION
          config: |
            # Node.js configuration
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
          when: configure_node | default(false)

    - name: Verify shell configuration
      command: "{{ user_shell }} -ic 'echo $PATH'"
      register: shell_test
      changed_when: false
      failed_when: false 