---
# Ubuntu NVIDIA server driver installation with intelligent checks

- name: Check NVIDIA GPU and driver status
  block:
    - name: Check if NVIDIA GPU is present
      ansible.builtin.shell: lspci | grep -i nvidia
      register: nvidia_gpu_check
      failed_when: false
      changed_when: false

    - name: Check current NVIDIA driver status
      ansible.builtin.command: nvidia-smi
      register: nvidia_smi_check
      failed_when: false
      changed_when: false

    - name: Check for driver/library version mismatch
      ansible.builtin.shell: |
        if nvidia-smi 2>&1 | grep -q "Driver/library version mismatch"; then
          echo "mismatch"
        elif nvidia-smi >/dev/null 2>&1; then
          echo "working"
        else
          echo "not_installed"
        fi
      register: nvidia_status
      changed_when: false

    - name: Get installed NVIDIA packages
      ansible.builtin.shell: dpkg -l | grep nvidia | grep -E "(driver|library)" || echo "none"
      register: nvidia_packages
      changed_when: false

    - name: Set NVIDIA skip flags
      ansible.builtin.set_fact:
        skip_nvidia_install: "{{ nvidia_gpu_check.rc != 0 or nvidia_status.stdout == 'working' }}"
        has_nvidia_gpu: "{{ nvidia_gpu_check.rc == 0 }}"
        nvidia_working: "{{ nvidia_status.stdout == 'working' }}"
        has_version_mismatch: "{{ nvidia_status.stdout == 'mismatch' }}"
        needs_driver_fix: "{{ nvidia_status.stdout == 'mismatch' }}"

- name: Display NVIDIA configuration status
  ansible.builtin.debug:
    msg: |
      NVIDIA Driver Status:
      - GPU Present: {{ 'Yes (' + nvidia_gpu_check.stdout_lines[0] + ')' if has_nvidia_gpu else 'No NVIDIA GPU detected' }}
      - Driver Status: {{
        'Working correctly' if nvidia_working else
        'Version mismatch detected' if has_version_mismatch else
        'Not installed or not working'
      }}
      - Action Needed: {{
        'None - already working' if skip_nvidia_install else
        'Fix version mismatch' if needs_driver_fix else
        'Install NVIDIA drivers' if has_nvidia_gpu else
        'Skip - no GPU detected'
      }}

- name: Skip NVIDIA operations for systems without GPU
  ansible.builtin.debug:
    msg: "No NVIDIA GPU detected, skipping driver installation"
  when: not has_nvidia_gpu

- name: Handle NVIDIA driver installation/fixes
  when: has_nvidia_gpu and not nvidia_working
  block:
    - name: Fix version mismatch if detected
      when: has_version_mismatch
      block:
        - name: Display version mismatch fix information
          ansible.builtin.debug:
            msg: |
              Fixing NVIDIA driver/library version mismatch...
              Current packages: {{ nvidia_packages.stdout_lines }}

        - name: Remove mismatched NVIDIA packages
          ansible.builtin.shell: |
            # Remove conflicting driver versions
            apt remove --purge nvidia-driver-535* nvidia-utils-535* libnvidia-*535* -y || true
            apt remove --purge nvidia-driver-570* nvidia-utils-570* libnvidia-*570* -y || true
            apt autoremove -y
          become: true

        - name: Clean up residual NVIDIA files
          ansible.builtin.shell: |
            rm -f /usr/lib/x86_64-linux-gnu/*535*
            rm -f /lib/x86_64-linux-gnu/libnvidia-ml.so*
            rm -rf /usr/share/doc/*535*
            ldconfig
          become: true

    - name: Install fresh NVIDIA drivers
      block:
        - name: Update package cache
          ansible.builtin.apt:
            update_cache: true
          become: true

        - name: Install ubuntu-drivers-common
          ansible.builtin.apt:
            name: ubuntu-drivers-common
            state: present
          become: true

        - name: Get recommended driver
          ansible.builtin.shell: ubuntu-drivers devices | grep recommended | awk '{print $3}' | head -1
          register: recommended_driver
          changed_when: false

        - name: Install recommended NVIDIA driver
          ansible.builtin.apt:
            name: "{{ recommended_driver.stdout | default('nvidia-driver-535-server') }}"
            state: present
          become: true
          register: driver_install

        - name: Install matching NVIDIA utilities
          ansible.builtin.apt:
            name:
              - "nvidia-utils-{{ recommended_driver.stdout.split('-')[2] | default('535') }}"
              - nvidia-settings
            state: present
          become: true
          when: recommended_driver.stdout is defined

        - name: Update library cache
          ansible.builtin.command: ldconfig
          become: true

    - name: Check if reboot is required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Display reboot requirement
      ansible.builtin.debug:
        msg: |
          NVIDIA driver installation completed!

          WARNING:  REBOOT REQUIRED WARNING:
          Please reboot the system to load the new NVIDIA drivers:
          sudo reboot

          After reboot, verify with: nvidia-smi
      when: reboot_required.stat.exists or driver_install.changed

- name: Display NVIDIA configuration results
  ansible.builtin.debug:
    msg: |-
      NVIDIA Driver Configuration Completed:
      {{
        '- Status: Already working correctly' if nvidia_working else
        '- Status: Version mismatch fixed, reboot required' if has_version_mismatch else
        '- Status: Fresh drivers installed, reboot required' if has_nvidia_gpu else
        '- Status: No GPU detected, skipped installation'
      }}
      {{
        '- GPUs: ' + nvidia_gpu_check.stdout_lines | join(', ') if has_nvidia_gpu else
        '- No NVIDIA hardware detected'
      }}
      {{
        '- Drivers: Recommended driver installed' if has_nvidia_gpu and not nvidia_working else
        '- Drivers: Already configured' if nvidia_working else
        ''
      }}
