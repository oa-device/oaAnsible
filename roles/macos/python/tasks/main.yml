---
# Install and configure pyenv and Python
- name: Configure pyenv and Python
  when: macos_configure.pyenv | bool
  # This entire block will only run if configure.pyenv is set to true in default.config.yml
  block:
    # Check if pyenv is already installed
    - name: Check if pyenv is installed
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.pyenv"
      register: pyenv_install

    # Install pyenv if not already installed
    - name: Install pyenv
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ ansible_env.HOME }}/.pyenv"
        version: master
        update: true
      when: not pyenv_install.stat.exists

    # Update pyenv to get latest Python versions
    - name: Update pyenv
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ ansible_env.HOME }}/.pyenv"
        version: master
        update: true
      when: pyenv_install.stat.exists

    # Add pyenv to PATH (zsh)
    - name: Add pyenv to PATH in .zshrc
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        line: 'export PATH="$HOME/.pyenv/bin:$PATH"'
        create: true
        mode: "0644"

    # Initialize pyenv (zsh)
    - name: Initialize pyenv in .zshrc
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        line: 'eval "$(pyenv init -)"'
        create: true
        mode: "0644"

    # Add pyenv to PATH (bash - for compatibility)
    - name: Add pyenv to PATH in .bash_profile
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        line: 'export PATH="$HOME/.pyenv/bin:$PATH"'
        create: true
        mode: "0644"

    # Initialize pyenv (bash - for compatibility)
    - name: Initialize pyenv in .bash_profile
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        line: 'eval "$(pyenv init -)"'
        create: true
        mode: "0644"

    # Check if Python version is installed
    - name: Check if Python version is installed
      ansible.builtin.shell: |
        set -o pipefail
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$($PYENV_ROOT/bin/pyenv init -)"
        $PYENV_ROOT/bin/pyenv versions --bare
      register: installed_versions
      changed_when: false

    # Install Python version
    - name: Install Python version
      ansible.builtin.shell: |
        set -o pipefail
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$($PYENV_ROOT/bin/pyenv init -)"
        $PYENV_ROOT/bin/pyenv install {{ macos_python.version }}
      when: macos_python.version not in (installed_versions.stdout_lines | default([]))
      changed_when: false

    # Set global Python version
    - name: Set global Python version
      ansible.builtin.shell: |
        set -o pipefail
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$($PYENV_ROOT/bin/pyenv init -)"
        $PYENV_ROOT/bin/pyenv global {{ macos_python.version }}
      register: pyenv_set_global
      changed_when: pyenv_set_global.rc == 0

    # Notify handler to rehash pyenv when new version is installed
    - name: Rehash pyenv when global version changes
      ansible.builtin.meta: flush_handlers
      when: pyenv_set_global.changed | default(false)
      notify: Rehash pyenv

    # Install uv - modern Python package manager
    - name: Check if uv is installed
      ansible.builtin.command: which uv
      register: uv_check
      changed_when: false
      failed_when: false

    - name: Install uv via curl
      ansible.builtin.shell: |
        set -o pipefail
        curl -fsSL https://astral.sh/uv/install.sh | sh
      args:
        executable: /bin/bash
      when: uv_check.rc != 0
      changed_when: false

    - name: Add uv to PATH in .zshrc
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.zshrc"
        line: 'export PATH="$HOME/.cargo/bin:$PATH"'
        create: true
        mode: "0644"
      when: uv_check.rc != 0

    - name: Add uv to PATH in .bash_profile
      ansible.builtin.lineinfile:
        dest: "{{ ansible_env.HOME }}/.bash_profile"
        line: 'export PATH="$HOME/.cargo/bin:$PATH"'
        create: true
        mode: "0644"
      when: uv_check.rc != 0
