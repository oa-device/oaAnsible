#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/macos/tracker

# No longer creating a separate user - using ansible_user instead

# OpenCV is installed via pip as part of the Python dependencies
# in the pyproject.toml file, so we don't need to install it separately via Homebrew

# Create directory structure in ansible_user's home directory
- name: Ensure tracker directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead/tracker"
    state: directory
    owner: "{{ ansible_user }}"
    group: staff
    mode: '0755'
  become: true

- name: Ensure tracker data directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead/tracker/data"
    state: directory
    owner: "{{ ansible_user }}"
    group: staff
    mode: '0755'
  become: true

# Create a symbolic link to accommodate the hardcoded database path in flight_server.py
- name: Create symbolic link from events.db to data/events.db
  ansible.builtin.file:
    src: "{{ ansible_user_dir }}/orangead/tracker/data/events.db"
    dest: "{{ ansible_user_dir }}/orangead/tracker/events.db"
    state: link
    owner: "{{ ansible_user }}"
    group: staff
    force: true
  become: true

- name: Ensure tracker logs directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead/tracker/logs"
    state: directory
    owner: "{{ ansible_user }}"
    group: staff
    mode: '0755'
  become: true

# Copy project files
- name: Synchronize oaTracker files
  ansible.posix.synchronize:
    src: "{{ playbook_dir }}/../oaTracker/"
    dest: "{{ ansible_user_dir }}/orangead/tracker/"
    delete: false
    rsync_opts:
      - "--exclude=.git"
      - "--exclude=.venv"
      - "--exclude=logs"
      - "--exclude=data"
      - "--exclude=__pycache__"
      - "--exclude=*.pyc"
  become: true
  become_user: "{{ ansible_user }}"

# Set proper ownership
- name: Set proper ownership for tracker files
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead/tracker"
    owner: "{{ ansible_user }}"
    group: staff
    recurse: true
  become: true

- name: Ensure specific directories have proper permissions
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: staff
    mode: '0755'
  loop:
    - "{{ ansible_user_dir }}/orangead/tracker/logs"
    - "{{ ansible_user_dir }}/orangead/tracker/data"
  become: true

- name: Ensure specific executable files have proper permissions
  ansible.builtin.file:
    path: "{{ item }}"
    state: file
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: staff
  loop:
    - "{{ ansible_user_dir }}/orangead/tracker/.venv/bin/python"
    - "{{ ansible_user_dir }}/orangead/tracker/.venv/bin/python3"
  become: true
  ignore_errors: true  # In case the file doesn't exist yet

# Detect Python installation
- name: Include Python detection tasks
  ansible.builtin.include_tasks: ../../tasks/python_detect.yml

# Setup Python environment
- name: Check Python version in virtual environment
  ansible.builtin.shell: |
    if [ -f {{ ansible_user_dir }}/orangead/tracker/.venv/bin/python ]; then
      VENV_VERSION=$({{ ansible_user_dir }}/orangead/tracker/.venv/bin/python --version | awk '{print $2}')
      REQUIRED_VERSION="{{ python.version }}"
      if [[ "$VENV_VERSION" == "$REQUIRED_VERSION"* ]]; then
        echo "0"
      else
        echo "1"
      fi
    else
      echo "1"
    fi
  register: python_version_check
  changed_when: false

- name: Remove existing virtual environment if Python version doesn't match required version
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/orangead/tracker/.venv"
    state: absent
  become: true
  when: python_version_check.stdout != "0"

- name: Check if Python venv exists
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/orangead/tracker/.venv"
  register: venv_exists

- name: Create Python virtual environment
  ansible.builtin.command: "{{ python_executable }} -m venv {{ ansible_user_dir }}/orangead/tracker/.venv"
  args:
    creates: "{{ ansible_user_dir }}/orangead/tracker/.venv"
  become: true
  become_user: "{{ ansible_user }}"
  when: not venv_exists.stat.exists

- name: Upgrade pip in virtual environment
  ansible.builtin.command: "{{ ansible_user_dir }}/orangead/tracker/.venv/bin/pip install --upgrade pip"
  become: true
  become_user: "{{ ansible_user }}"
  when: not venv_exists.stat.exists

# Install core dependencies directly
- name: Install core Python dependencies
  ansible.builtin.pip:
    name:
      - opencv-python
      - ultralytics
      - torch
      - fastapi
      - numpy
      - duckdb
      - pyarrow
      - uvicorn
      - pyobjc  # Required for Foundation module on macOS
      - pyobjc-framework-Cocoa  # Specifically includes Foundation
      - sse_starlette  # Required for Server-Sent Events in the API
      - pygments  # Required for logger formatting
      - anyio  # Required for async I/O operations
      - lap  # Required for ultralytics tracker
      - shapely  # Required for zone counter
    virtualenv: "{{ ansible_user_dir }}/orangead/tracker/.venv"
    state: present
  become: true
  become_user: "{{ ansible_user }}"

# Configure oaTracker
- name: Template config.yaml
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ ansible_user_dir }}/orangead/tracker/config.yaml"
    owner: "{{ ansible_user }}"
    group: staff
    mode: '0644'
  become: true

# Setup launchd service
- name: Template launchd service file
  ansible.builtin.template:
    src: com.orangead.tracker.plist.j2
    dest: "/Library/LaunchDaemons/com.orangead.tracker.plist"
    owner: root
    group: wheel
    mode: '0644'
  become: true
  register: launchd_service

- name: Unload existing launchd service if it exists
  ansible.builtin.command: launchctl unload /Library/LaunchDaemons/com.orangead.tracker.plist
  become: true
  failed_when: false
  changed_when: false
  when: launchd_service.changed

- name: Load launchd service
  ansible.builtin.command: launchctl load /Library/LaunchDaemons/com.orangead.tracker.plist
  become: true
  when: launchd_service.changed

- name: Start launchd service
  ansible.builtin.command: launchctl start com.orangead.tracker
  become: true
  when: launchd_service.changed
