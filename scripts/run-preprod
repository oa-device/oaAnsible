#!/bin/bash

# Script to run Ansible playbook for pre-prod environment,
# ensuring SSH key from vault is loaded into ssh-agent.
# Pre-prod runs on real Mac Mini hardware for final testing.

# Source helper functions and variables
HELPER_SCRIPT_PATH="$(dirname "${BASH_SOURCE[0]}")/helpers.sh"
if [ -f "$HELPER_SCRIPT_PATH" ]; then
  # shellcheck source=./helpers.sh
  source "$HELPER_SCRIPT_PATH"
else
  echo "ERROR: helpers.sh not found at $HELPER_SCRIPT_PATH"
  exit 1
fi

# Set script-specific log level
SCRIPT_LOG_LEVEL=$_LOG_LEVEL_INFO
export SCRIPT_LOG_LEVEL

log_debug "run-preprod script started."
ensure_ansible_root_dir

# Pre-prod safety warning
log_warn "ðŸ”§ PRE-PRODUCTION DEPLOYMENT"
log_warn "Target: Real Mac Mini hardware (not VM)"
log_warn "This will affect actual devices - use for final testing before production"
echo ""

# Check for required dependencies using helper functions
check_vault_password_file
check_yq_installed
check_ansible_vault_installed
check_ansible_installed

log_info "Running Ansible playbook for pre-prod environment..."

# Pre-prod specific safety checks
log_info "Pre-prod safety features:"
log_info "  âœ“ Server optimizations enabled (for testing)"
log_info "  âœ“ Tailscale safety checks enabled"
log_info "  âœ— Experimental features disabled"
log_info "  âœ— Destructive operations disabled"
echo ""

# All sudo passwords are now stored in the vault, no prompting needed
log_info "Using sudo passwords from vault, no prompting required."

# Use the simplified environment function
if ! run_environment_playbook "pre-prod" "$@"; then
  log_error "Ansible playbook failed for pre-prod."
  exit 1
else
  log_info "Ansible playbook completed successfully for pre-prod."
fi

log_debug "run-preprod script finished."