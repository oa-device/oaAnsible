---
- name: Install Go using Homebrew
  community.general.homebrew:
    name: go
    state: present

- name: Set Go environment variables
  block:
    - name: Get Go environment
      command: go env GOPATH
      register: go_path
      changed_when: false

    - name: Set Go binary path fact
      set_fact:
        go_bin_path: "{{ go_path.stdout | default(ansible_env.HOME + '/go/bin') }}"

    - name: Ensure Go binary path exists
      file:
        path: "{{ go_bin_path }}"
        state: directory
        mode: '0755'

- name: Install Tailscale using go install
  command: "{{ ansible_env.HOME }}/go/bin/go install tailscale.com/cmd/tailscale{,d}@stable"
  args:
    creates: "{{ ansible_env.HOME }}/go/bin/tailscale"
  register: tailscale_install
  changed_when: tailscale_install.rc == 0

- name: Create symlinks in /usr/local/bin for easier access
  file:
    src: "{{ ansible_env.HOME }}/go/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
    force: yes
  loop:
    - tailscale
    - tailscaled
  become: true

- name: Install Tailscale system daemon
  command: /usr/local/bin/tailscaled install-system-daemon
  become: true
  register: tailscaled_install
  changed_when: tailscaled_install.rc == 0
  args:
    creates: /Library/LaunchDaemons/com.tailscale.tailscaled.plist

- name: Ensure Tailscale service is running
  service:
    name: com.tailscale.tailscaled
    state: started
    enabled: yes
  become: true

- name: Wait for Tailscale daemon to be ready
  wait_for:
    path: /var/run/tailscale/tailscaled.sock
    state: file
    timeout: 30

- name: Authenticate Tailscale
  command: >
    /usr/local/bin/tailscale up 
    --authkey={{ vault_ts_authkey }} 
    --hostname={{ inventory_hostname }}
    --advertise-tags={{ vault_ts_tags_macos | default('tag:macos-managed') }}
    --accept-dns=false
  register: tailscale_up
  changed_when: tailscale_up.rc == 0 or 'already authenticated' in tailscale_up.stderr
  failed_when: tailscale_up.rc != 0 and 'already authenticated' not in tailscale_up.stderr

- name: Configure DNS settings
  include_tasks: dns.yml
  when: dns_config.enable_magic_dns | default(true)
  environment:
    PATH: "{{ homebrew_prefix | default('/opt/homebrew') }}/bin:/usr/local/bin:{{ ansible_env.PATH }}"
