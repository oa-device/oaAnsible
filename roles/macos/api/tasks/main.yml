---
# Enhanced macOS API Deployment with Improved Idempotency
# Uses state detection and idempotency patterns for efficient deployment

- name: Import state detection for macOS API
  ansible.builtin.include_tasks: ../../../tasks/state-detection.yml
  tags: ["always"]

- name: Deploy macOS API service
  when: platform_state.is_macos
  block:
    # Deployment status check and early exit
    - name: Check deployment status
      ansible.builtin.include_tasks: deployment_check.yml
      tags: ["api", "check", "status"]

    # Environment setup and file synchronization
    - name: Setup environment and files
      ansible.builtin.include_tasks: setup_environment.yml
      when: api_deployment_needed
      tags: ["api", "setup", "files"]

    # Virtual environment and dependencies
    - name: Setup virtual environment
      ansible.builtin.include_tasks: virtual_environment.yml
      when: api_deployment_needed
      tags: ["api", "python", "dependencies"]

    # Service configuration and startup
    - name: Configure and start service
      ansible.builtin.include_tasks: service_config.yml
      when: api_deployment_needed
      tags: ["api", "service", "launchd"]

- name: Set macOS API deployment facts
  ansible.builtin.set_fact:
    macos_api_deployed: true
    macos_api_status: >
      {{
        'running' if 'state = running' in (service_verification.stdout | default(''))
        else 'configured' if api_deployment_needed | default(false)
        else 'skipped'
      }}
  when: platform_state.is_macos