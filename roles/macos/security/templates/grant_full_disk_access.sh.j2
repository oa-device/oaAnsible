#!/bin/bash
# Template for granting Full Disk Access to required applications
# This script grants Full Disk Access permissions in the TCC database

# TCC database paths
USER_TCC_DB="{{ ansible_user_dir }}/Library/Application Support/com.apple.TCC/TCC.db"
SYSTEM_TCC_DB="/Library/Application Support/com.apple.TCC/TCC.db"

# Applications that need Full Disk Access
declare -a fda_apps
declare -a fda_client_types

# Add sshd-keygen-wrapper for SSH access to TCC
fda_apps+=("/usr/libexec/sshd-keygen-wrapper")
fda_client_types+=(1)

# Add tailscaled for network access
fda_apps+=("/usr/local/bin/tailscaled")
fda_client_types+=(1)

fda_apps+=("{{ ansible_user_dir }}/go/bin/tailscaled")
fda_client_types+=(1)

# Add Terminal for manual access
fda_apps+=("com.apple.Terminal")
fda_client_types+=(0)

# Function to grant Full Disk Access to a TCC database
grant_fda_to_db() {
    local tcc_db="$1"
    local db_type="$2"
    local use_sudo="$3"
    
    echo "Granting Full Disk Access to $db_type TCC database: $tcc_db"
    
    # Check if the TCC database exists
    if [ ! -f "$tcc_db" ]; then
        echo "$db_type TCC database does not exist at $tcc_db"
        return 1
    fi
    
    # Check if we can access the database
    if ! $use_sudo sqlite3 "$tcc_db" "SELECT count(*) FROM sqlite_master;" &>/dev/null; then
        echo "WARNING: Cannot access $db_type TCC database"
        return 1
    fi
    
    # Loop over the applications
    for i in "${!fda_apps[@]}"; do
        app=${fda_apps[$i]}
        client_type=${fda_client_types[$i]}
        
        echo "  Processing Full Disk Access for $app (client_type=$client_type)"
        
        # First try to delete any existing record to ensure a clean state
        $use_sudo sqlite3 "$tcc_db" "DELETE FROM access WHERE service='kTCCServiceSystemPolicyAllFiles' AND client='$app';" 2>/dev/null
        echo "    Cleared any existing Full Disk Access records for $app"
        
        # Try multiple insert methods for Full Disk Access
        
        # Method 1: Modern TCC schema with all fields
        echo "    Trying modern Full Disk Access insert with all fields..."
        $use_sudo sqlite3 "$tcc_db" "INSERT INTO access (service, client, client_type, auth_value, auth_reason, auth_version, indirect_object_identifier, flags) 
            VALUES ('kTCCServiceSystemPolicyAllFiles', '$app', $client_type, 2, 3, 1, 'UNUSED', 0);" 2>/dev/null
        
        if [ $? -eq 0 ]; then
            echo "    Successfully granted Full Disk Access for $app (modern schema, all fields)"
            continue
        fi
        
        # Method 2: Modern schema with minimal fields
        echo "    Trying modern Full Disk Access insert with minimal fields..."
        $use_sudo sqlite3 "$tcc_db" "INSERT INTO access (service, client, client_type, auth_value) 
            VALUES ('kTCCServiceSystemPolicyAllFiles', '$app', $client_type, 2);" 2>/dev/null
        
        if [ $? -eq 0 ]; then
            echo "    Successfully granted Full Disk Access for $app (modern schema, minimal fields)"
            continue
        fi
        
        # Method 3: Older TCC schema
        echo "    Trying older Full Disk Access schema insert..."
        $use_sudo sqlite3 "$tcc_db" "INSERT INTO access (service, client, client_type, allowed, prompt_count) 
            VALUES ('kTCCServiceSystemPolicyAllFiles', '$app', $client_type, 1, 1);" 2>/dev/null
        
        if [ $? -eq 0 ]; then
            echo "    Successfully granted Full Disk Access for $app (older schema)"
            continue
        fi
        
        echo "    All Full Disk Access insert attempts failed for $app"
    done
}

echo "\n===== GRANTING FULL DISK ACCESS PERMISSIONS =====\n"

# Try user-level TCC database first
echo "Attempting user-level Full Disk Access grants..."
if sqlite3 "$USER_TCC_DB" "SELECT count(*) FROM sqlite_master;" &>/dev/null 2>&1; then
    grant_fda_to_db "$USER_TCC_DB" "User" ""
else
    echo "User TCC database not accessible, skipping user-level Full Disk Access"
fi

# Grant to system-level TCC database (requires sudo)
echo -e "\nAttempting system-level Full Disk Access grants..."
grant_fda_to_db "$SYSTEM_TCC_DB" "System" "sudo"

echo "\n===== FULL DISK ACCESS OPERATION COMPLETE =====\n"

# Verify the permissions
echo "Verifying Full Disk Access permissions:"
echo "User TCC database:"
sqlite3 "$USER_TCC_DB" "SELECT service, client, client_type, auth_value FROM access WHERE service='kTCCServiceSystemPolicyAllFiles';" 2>/dev/null || echo "Error accessing user TCC database"

echo -e "\nSystem TCC database:"
sudo sqlite3 "$SYSTEM_TCC_DB" "SELECT service, client, client_type, auth_value FROM access WHERE service='kTCCServiceSystemPolicyAllFiles';" 2>/dev/null || echo "Error accessing system TCC database"

echo -e "\nFull Disk Access permissions have been configured."
echo "You may need to restart the affected applications or reboot for changes to take effect."