---
# Ethernet optimization tasks for Ubuntu servers
# Focuses on Realtek controller stability and Gigabit performance

- name: Ethernet optimization status check
  block:
    - name: Gather network interface information
      ansible.builtin.setup:
        gather_subset:
          - "network"
          - "hardware"

    - name: Detect ethernet interfaces
      ansible.builtin.set_fact:
        ethernet_interfaces: "{{ ansible_interfaces | select('match', '^en.*') | list }}"

    - name: Check for Realtek ethernet controllers
      ansible.builtin.shell: lspci | grep -i ethernet | grep -i realtek
      register: realtek_check
      failed_when: false
      changed_when: false

    - name: Parse Realtek controller information
      ansible.builtin.set_fact:
        has_realtek: "{{ realtek_check.rc == 0 }}"
        realtek_info: "{{ realtek_check.stdout if realtek_check.rc == 0 else 'No Realtek controller detected' }}"
        needs_optimization: "{{ ethernet_optimization.detect_realtek and realtek_check.rc == 0 }}"

    - name: Display ethernet hardware status
      ansible.builtin.debug:
        msg: |
          Ethernet Hardware Detection:
          - Interfaces found: {{ ethernet_interfaces | join(', ') if ethernet_interfaces else 'None' }}
          - Realtek controller: {{ 'Yes' if has_realtek else 'No' }}
          - Controller info: {{ realtek_info }}
          - Optimization needed: {{ 'Yes' if needs_optimization else 'No' }}

- name: Install ethernet optimization dependencies
  ansible.builtin.apt:
    name:
      - ethtool
      - net-tools
      - dkms
      - build-essential
    state: present
    update_cache: true
  become: true
  when: needs_optimization

- name: Configure Realtek r8169 driver options
  when: needs_optimization
  block:
    - name: Create modprobe configuration directory
      ansible.builtin.file:
        path: /etc/modprobe.d
        state: directory
        mode: '0755'
      become: true

    - name: Configure r8169 driver for stability
      ansible.builtin.template:
        src: r8169-options.conf.j2
        dest: /etc/modprobe.d/r8169-orangead.conf
        backup: true
        mode: '0644'
      become: true
      notify: reload network driver

    - name: Update initramfs with new driver configuration
      ansible.builtin.command: update-initramfs -u
      become: true
      when: ansible_facts['distribution_major_version'] | int >= 20

- name: Configure ethernet power management
  when: 
    - needs_optimization
    - ethernet_optimization.power_management.disable_wol or ethernet_optimization.power_management.disable_interface_pm
  block:
    - name: Create ethernet power management service
      ansible.builtin.template:
        src: ethernet-pm-disable.service.j2
        dest: /etc/systemd/system/ethernet-pm-disable.service
        mode: '0644'
      become: true
      when: ethernet_optimization.power_management.create_service

    - name: Enable ethernet power management service
      ansible.builtin.systemd:
        name: ethernet-pm-disable
        enabled: true
        state: started
        daemon_reload: true
      become: true
      when: ethernet_optimization.power_management.create_service

    - name: Disable Wake-on-LAN immediately (if interfaces exist)
      ansible.builtin.command: "ethtool -s {{ item }} wol d"
      become: true
      loop: "{{ ethernet_interfaces }}"
      when: 
        - ethernet_optimization.power_management.disable_wol
        - ethernet_interfaces | length > 0
      failed_when: false
      changed_when: true

- name: Configure ethernet speed optimization
  when: 
    - needs_optimization
    - ethernet_optimization.speed_optimization.enabled
    - ethernet_interfaces | length > 0
  block:
    - name: Get current ethernet interface speeds
      ansible.builtin.command: "ethtool {{ item }}"
      register: interface_speeds
      loop: "{{ ethernet_interfaces }}"
      failed_when: false
      changed_when: false

    - name: Enable auto-negotiation for ethernet interfaces
      ansible.builtin.command: "ethtool -s {{ item }} autoneg on"
      become: true
      loop: "{{ ethernet_interfaces }}"
      when: ethernet_optimization.speed_optimization.force_autoneg
      failed_when: false
      changed_when: true

    - name: Verify ethernet speeds after configuration
      ansible.builtin.command: "ethtool {{ item }}"
      register: final_interface_speeds
      loop: "{{ ethernet_interfaces }}"
      failed_when: false
      changed_when: false
      when: ethernet_optimization.speed_optimization.verify_after_config

- name: Setup network monitoring
  when:
    - ethernet_optimization.monitoring.enabled
    - needs_optimization or ethernet_optimization.monitoring.enabled
  block:
    - name: Create network monitoring directory
      ansible.builtin.file:
        path: "{{ ethernet_optimization.monitoring.log_path }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      become: true

    - name: Create network monitoring script
      ansible.builtin.template:
        src: network-monitor.sh.j2
        dest: "{{ ethernet_optimization.monitoring.log_path }}/monitor.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      become: true

    - name: Setup network monitoring cron job
      ansible.builtin.cron:
        name: "OrangeAd Network Monitor"
        job: "{{ ethernet_optimization.monitoring.log_path }}/monitor.sh"
        minute: "*/{{ ethernet_optimization.monitoring.interval_minutes }}"
        user: "{{ ansible_user }}"
        state: present
      become: true

- name: Create ethernet diagnostics tools
  when:
    - ethernet_optimization.diagnostics.create_scripts
    - needs_optimization
  block:
    - name: Create ethernet diagnostics script
      ansible.builtin.template:
        src: ethernet-diagnostics.sh.j2
        dest: "{{ ethernet_optimization.monitoring.log_path }}/ethernet-diagnostics.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      become: true

    - name: Create ethernet troubleshooting guide
      ansible.builtin.template:
        src: ethernet-troubleshooting.md.j2
        dest: "{{ ethernet_optimization.monitoring.log_path }}/troubleshooting-guide.md"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      become: true

- name: Display ethernet optimization results
  ansible.builtin.debug:
    msg: |
      Ethernet Optimization Completed:
      - Realtek controller detected: {{ 'Yes' if has_realtek else 'No' }}
      - Driver configuration: {{ 'Applied' if needs_optimization else 'Skipped' }}
      - Power management: {{ 'Disabled' if ethernet_optimization.power_management.disable_wol else 'Unchanged' }}
      - Speed optimization: {{ 'Configured' if ethernet_optimization.speed_optimization.enabled else 'Skipped' }}
      - Monitoring: {{ 'Enabled' if ethernet_optimization.monitoring.enabled else 'Disabled' }}
      - Diagnostics tools: {{ 'Created' if ethernet_optimization.diagnostics.create_scripts else 'Skipped' }}
      
      {% if has_realtek %}
      Realtek Controller: {{ realtek_info }}
      {% endif %}
      
      {% if ethernet_optimization.monitoring.enabled %}
      Monitor logs: {{ ethernet_optimization.monitoring.log_path }}/network.log
      Diagnostics: {{ ethernet_optimization.monitoring.log_path }}/ethernet-diagnostics.sh
      {% endif %}