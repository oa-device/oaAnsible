---
- name: Configure MPV player service
  block:
    - name: Deploy video files from role
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ player.video_source }}/{{ item | basename }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0644"
      with_fileglob:
        - "{{ role_path }}/files/*"
      when:
        - item | regex_search('\.(webm|mp4|mov|avi|mkv)$')

    - name: Deploy OrangeAd MPV player script
      ansible.builtin.template:
        src: oemplayer.sh.j2
        dest: "{{ player.video_source }}/oemplayer.sh"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0755"

    - name: Create player LaunchAgent plist
      ansible.builtin.template:
        src: com.orangead.player.plist.j2
        dest: "{{ ansible_user_dir }}/Library/LaunchAgents/{{ player.service_name }}.plist"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user_group | default('staff') }}"
        mode: "0644"

    - name: Load new MPV player LaunchAgent (auto-starts via RunAtLoad)
      ansible.builtin.shell: |
        launchctl load "{{ ansible_user_dir }}/Library/LaunchAgents/{{ player.service_name }}.plist"
      become: false
      changed_when: true

    - name: Wait for auto-started service to initialize
      ansible.builtin.pause:
        seconds: 5

    - name: Verify MPV player service is running
      ansible.builtin.shell: |
        launchctl list | grep "{{ player.service_name }}" || echo "not loaded"
      register: service_status
      changed_when: false
      failed_when: false

    - name: Check for running MPV processes
      ansible.builtin.shell: |
        pgrep -f "mpv.*--screen=" | wc -l || echo "0"
      register: mpv_count
      changed_when: false
      failed_when: false

    - name: Verify video files exist
      ansible.builtin.stat:
        path: "{{ player.video_source }}/{{ video_item.name }}"
      loop: "{{ player.videos }}"
      loop_control:
        loop_var: video_item
      register: video_files_check

    - name: Display MPV player status
      ansible.builtin.debug:
        msg: |
          MPV Player Service Status:
          - LaunchAgent: {{ service_status.stdout if service_status.stdout != 'not loaded' else 'Not loaded' }}
          - MPV processes: {{ mpv_count.stdout }}
          - Expected processes: {{ '2' if player.dual_screen | default(true) else '1' }}
          - Service: {{ player.service_name }}
          - Video files: {{ video_files_check.results | selectattr('stat.exists') | list | length }}/{{ video_files_check.results | length }}

    - name: Read recent log entries
      ansible.builtin.shell: |
        tail -n 10 "{{ player.log_file }}" 2>/dev/null || echo "No log entries yet"
      register: recent_logs
      changed_when: false

    - name: Display recent log entries
      ansible.builtin.debug:
        msg: |
          Recent Log Entries:
          {{ recent_logs.stdout }}

    - name: Fail if player is not running correctly
      ansible.builtin.fail:
        msg: "MPV player service is not running correctly. Check logs at {{ player.log_file }}"
      when: 
        - service_status.stdout == 'not loaded' or mpv_count.stdout|int < 1
        - not ansible_check_mode
