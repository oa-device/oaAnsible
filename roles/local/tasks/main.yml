---
# Detect shell and set configuration paths
- name: Get default shell
  command: dscl . -read /Users/{{ ansible_user }} UserShell
  register: user_shell_info
  changed_when: false

- name: Set shell facts
  set_fact:
    user_shell: "{{ user_shell_info.stdout.split('/')[-1] }}"
    shell_profile: "{{ ansible_env.HOME }}/{{ shell_config[user_shell_info.stdout.split('/')[-1]].profile_file }}"
    shell_rc: "{{ ansible_env.HOME }}/{{ shell_config[user_shell_info.stdout.split('/')[-1]].rc_file }}"

- name: Configure shell environment
  blockinfile:
    path: "{{ item.path }}"
    create: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK - {{ item.name }}"
    block: "{{ item.config }}"
  loop:
    - path: "{{ shell_profile }}"
      name: "PATH_AND_BREW"
      config: |
        # Homebrew configuration
        export PATH="{{ homebrew_prefix }}/bin:$PATH"
        eval "$({{ homebrew_prefix }}/bin/brew shellenv)"
    - path: "{{ shell_rc }}"
      name: "TOOL_CONFIGURATIONS"
      config: |
        {% if configure_pyenv %}
        # Pyenv configuration
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        {% endif %}

        {% if configure_node %}
        # Node.js configuration
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
        {% endif %}

- name: Import Tailscale tasks
  import_tasks: tailscale.yml
  when: configure.tailscale | default(false)
  tags: ["tailscale", "network"]

- name: Import Python environment tasks
  import_tasks: pyenv.yml
  when: configure.pyenv | default(false)
  tags: ["python", "dev"]

- name: Import Node.js tasks
  import_tasks: node.yml
  when: configure.node | default(false)
  tags: ["node", "dev"]
